package re

var saRows = []int{1, 2, 3, 4, 5, 6, 7, 9, 11, 13, 15, 17, 21, 25} // FireFactors
var saCols = []int{-5, 1, 5, 9, 12, 15, 19, 23, 29, 34}            // 2D10 + mods
var saAuto = []int{
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 1
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 2
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1, // 3
	0, 0, 0, 0, 0, 0, 0, 0, 1, 1, // 4
	0, 0, 0, 0, 0, 0, 1, 1, 1, 1, // 5
	0, 0, 0, 0, 0, 1, 1, 1, 1, 2, // 6
	0, 0, 0, 0, 1, 1, 1, 1, 2, 2, // 7
	0, 0, 0, 0, 1, 1, 2, 2, 2, 3, // 9
	0, 0, 0, 1, 1, 1, 2, 2, 3, 4, // 11
	0, 0, 0, 1, 1, 1, 2, 3, 4, 5, // 13
	0, 0, 1, 1, 1, 2, 2, 3, 5, 5, // 15
	0, 0, 1, 1, 2, 2, 3, 4, 5, 6, // 17
	0, 0, 1, 1, 2, 2, 3, 5, 6, 6, // 21
}
var saExtra = []int{
	0, 0, 0, 0, 6, 6, 6, 5, 5, 4, // 1
	0, 0, 0, 6, 6, 5, 5, 4, 3, 2, // 2
	0, 0, 6, 5, 4, 3, 3, 2, 2, 6, // 3
	0, 6, 5, 4, 3, 3, 2, 2, 6, 5, // 4
	0, 6, 5, 4, 3, 2, 6, 6, 5, 3, // 5
	6, 6, 5, 4, 3, 6, 6, 6, 3, 6, // 6
	6, 5, 4, 3, 6, 5, 4, 2, 5, 4, // 7
	5, 4, 3, 2, 5, 4, 6, 4, 2, 3, // 9
	5, 4, 2, 6, 4, 3, 5, 3, 3, 6, // 11
	4, 3, 2, 6, 3, 2, 4, 6, 6, 6, // 13
	4, 3, 6, 5, 2, 6, 2, 3, 6, 3, // 15
	4, 3, 5, 4, 6, 5, 5, 5, 3, 6, // 17
	3, 2, 5, 3, 5, 3, 2, 6, 6, 6, // 21
}

func calcSAFire(dieTotal, fireFactor int) (int, int) {
	row := 0
	col := 0
	for k, v := range saCols {
		if dieTotal >= v {
			col = k
		}
	}
	for k, v := range saRows {
		if fireFactor >= v {
			row = k
		}
	}
	println("result: row", row, "col", col)
	offset := len(saCols)*row + col
	println("offset", offset)
	println("auto", saAuto[offset])
	println("extra", saExtra[offset])
	return saAuto[offset], saExtra[offset]
}
